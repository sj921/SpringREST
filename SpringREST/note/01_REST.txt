01_REST.txt


 # REST
 
  - HTTP uri로 해당 자원을 식별하고 HTTP method로 해당 자원에 대한 CRUD를 구분하는 방식
  - Create, Insert (POST method)	POST:/employee, 새 사원을 추가한다
  - Read, Select (GET method)		GET:/employee/103/, 해당 사원을 조회한다
  - Update (PUT method)				PUT:/employee/103/, 해당 사원의 정보를 수정한다
  - Delete (DELETE method)			DELETE:/employee/103/, 해당 사원의 정보를 삭제한다
  - 요청을 보내면 뷰 페이지를 응답하는 대신 처리 결과가 담겨있는 데이터를 응답한다

 #  Spring REST
 
  - @RestController : 해당 컨트롤러가 RestController임을 표시
  - @ResponseBody : 뷰 페이지로 포워드하는 대신 데이터를 응답한다는 것을 표시
  - @RequestBody : 요청에 실려온 데이터를 자바에서 사용가능한 형태로 바인딩해주는 어노테이션
  - @PathVariable : 요청 uri의 특정 부분을 변수로 사용하는 것이 가능하다
  
  
 # RestController
 
  - RestController는 일반 컨트롤러와 다르게 웹 페이지(view) 화면 대신 데이터를 응답한다
  - 메서드의 리턴 타입은 뷰를 찾아가는 방식이 아니라 사용자에게 응답할 데이터 타입이 된다
  - 주로 JSON 또는 XML 형식으로 응답하게 된다
 
 
 # Jackson-databind
 
  * RestController에서 DTO 타입을 리턴하면 JSON 타입의 문자열로 자동 변환해주는 라이브러리
  
	<dependency>
	    <groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-databind</artifactId>
	    <version>2.14.2</version>
	</dependency>
 
 
  * RestController에서 DTO 타입을 리턴하면 XML 타입의 문자열로 자동 변환해주는 라이브러리
  
	<dependency>
	    <groupId>com.fasterxml.jackson.dataformat</groupId>
	    <artifactId>jackson-dataformat-xml</artifactId>
	    <version>2.14.2</version>
	</dependency>
 
 
 # ResponseEntity
 
  - 개발자가 직접 원하는 상태 코드 (HttpStatus), 컨텐츠타입(MediaType), 내용(body)등을 설정하여
  	원하는 응답을 생성할 수 있는 객체  	
  - 200 : ok
  - 404 : not found
  - 502 : Bad Gateway
  - jackson-databind가 설치되어 있다면 body에 DTO타입 데이터를 넣는 경우 자동변환 해준다
  - 상태 코드와 컨텐츠 타입을 통해 웹 브라우저가 데이터를 어떻게 해석할 것인지 결정한다
  
 
 
 
 












